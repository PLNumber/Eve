@startuml
' 💄 시각 정돈용 설정
skinparam classAttributeIconSize 0
skinparam ClassFontSize 11
skinparam ClassAttributeFontSize 10
skinparam ClassStereotypeFontSize 9
skinparam BackgroundColor #FAFAFA
skinparam ArrowColor DarkSlateGray
skinparam ClassBackgroundColor White
skinparam Shadowing false
skinparam dpi 150

' 💡 패키지 단위로 그룹핑
set namespaceSeparator ::

class "eve::firebase_options.dart::DefaultFirebaseOptions" {
  {static} +FirebaseOptions android
  {static} +FirebaseOptions currentPlatform
}

"eve::firebase_options.dart::DefaultFirebaseOptions" o-- "firebase_core_platform_interface::firebase_core_platform_interface.dart::FirebaseOptions"

abstract class "eve::l10n::gen_l10n::app_localizations.dart::AppLocalizations" {
  +String localeName
  {static} +LocalizationsDelegate<AppLocalizations> delegate
  {static} +List<LocalizationsDelegate<dynamic>> localizationsDelegates
  {static} +List<Locale> supportedLocales
  +String waiting
  +String title
  +그외 등등...
}

"eve::l10n::gen_l10n::app_localizations.dart::AppLocalizations" o-- "flutter::src::widgets::localizations.dart::LocalizationsDelegate<AppLocalizations>"

class "eve::l10n::gen_l10n::app_localizations.dart::_AppLocalizationsDelegate" {
  +dynamic load()
  +bool isSupported()
  +bool shouldReload()
}

"flutter::src::widgets::localizations.dart::LocalizationsDelegate" <|-- "eve::l10n::gen_l10n::app_localizations.dart::_AppLocalizationsDelegate"

class "eve::l10n::gen_l10n::app_localizations_en.dart::AppLocalizationsEn" {
  +String waiting
  +String title
  +그외 등등...
}

"eve::l10n::gen_l10n::app_localizations.dart::AppLocalizations" <|-- "eve::l10n::gen_l10n::app_localizations_en.dart::AppLocalizationsEn"

class "eve::l10n::gen_l10n::app_localizations_ko.dart::AppLocalizationsKo" {
  +String waiting
  +String title
  +그외 등등...
}

"eve::l10n::gen_l10n::app_localizations.dart::AppLocalizations" <|-- "eve::l10n::gen_l10n::app_localizations_ko.dart::AppLocalizationsKo"

class "eve::main.dart::MyApp" {
  -dynamic _getStartPage()
  +Widget build()
}

"flutter::src::widgets::framework.dart::StatelessWidget" <|-- "eve::main.dart::MyApp"

class "eve::main.dart::MainPage" {
  +_MainPage createState()
}

"flutter::src::widgets::framework.dart::StatefulWidget" <|-- "eve::main.dart::MainPage"

class "eve::main.dart::_MainPage" {
  +String nickname
  +String accuracy
  +String learningTime
  +int totalSolved
  +int correctSolved
  -int _level
  -int _exp
  -int _maxExp
  -bool _notificationsEnabled
  +void initState()
  +String getGradeMappingText()
  -dynamic _loadUserInfo()
  -dynamic _loadStats()
  -dynamic _loadLearningTime()
  +String getProfileImage()
  +Widget build()
}

"flutter::src::widgets::framework.dart::State" <|-- "eve::main.dart::_MainPage"


class "eve::provider::audio_provider.dart::AudioProvider" {
  -AudioPlayer _player
  -List<String> _musicList
  -bool _isPlaying
  -double _volume
  -String _currentMusic
  +bool isPlaying
  +double volume
  +String currentMusic
  +List<String> musicList
  -dynamic _initAudio()
  -dynamic _setMusic()
  +dynamic togglePlay()
  +dynamic setVolume()
  +dynamic changeMusic()
}

"eve::provider::audio_provider.dart::AudioProvider" o-- "audioplayers::src::audioplayer.dart::AudioPlayer"
"flutter::src::foundation::change_notifier.dart::ChangeNotifier" <|-- "eve::provider::audio_provider.dart::AudioProvider"

class "eve::provider::local_provider.dart::LocaleProvider" {
  -Locale _locale
  +Locale locale
  +dynamic loadLocale()
  +dynamic setLocale()
}

"eve::provider::local_provider.dart::LocaleProvider" o-- "dart::ui::Locale"
"flutter::src::foundation::change_notifier.dart::ChangeNotifier" <|-- "eve::provider::local_provider.dart::LocaleProvider"

class "eve::provider::quiz_mode_provider.dart::QuizModeProvider" {
  -QuizGenerationMode _mode
  +QuizGenerationMode mode
  +String modeLabel
  +void setMode()
}

"eve::provider::quiz_mode_provider.dart::QuizModeProvider" o-- "eve::provider::quiz_mode_provider.dart::QuizGenerationMode"
"flutter::src::foundation::change_notifier.dart::ChangeNotifier" <|-- "eve::provider::quiz_mode_provider.dart::QuizModeProvider"

class "eve::provider::quiz_mode_provider.dart::QuizGenerationMode" {
  +int index
  {static} +List<QuizGenerationMode> values
  {static} +QuizGenerationMode gemini
  {static} +QuizGenerationMode urimalsaem
}

"eve::provider::quiz_mode_provider.dart::QuizGenerationMode" o-- "eve::provider::quiz_mode_provider.dart::QuizGenerationMode"
"dart::core::Enum" <|-- "eve::provider::quiz_mode_provider.dart::QuizGenerationMode"

class "eve::provider::theme_provider.dart::ThemeProvider" {
  -ThemeMode _themeMode
  +ThemeMode themeMode
  +dynamic loadTheme()
  +dynamic setTheme()
}

"eve::provider::theme_provider.dart::ThemeProvider" o-- "flutter::src::material::app.dart::ThemeMode"
"flutter::src::foundation::change_notifier.dart::ChangeNotifier" <|-- "eve::provider::theme_provider.dart::ThemeProvider"

class "eve::viewModel::option_view_model.dart::OptionViewModel" {
  -AuthService _authService
  -QuizRepository _quizRepository
  +QuizRepository quizRepository
  +dynamic resetUserStats()
  +dynamic signOutAndExit()
  +dynamic updateNickname()
  +dynamic checkNicknameAvailable()
}

"eve::viewModel::option_view_model.dart::OptionViewModel" o-- "eve::Services::auth_service.dart::AuthService"
"eve::viewModel::option_view_model.dart::OptionViewModel" o-- "eve::repository::quiz_repository.dart::QuizRepository"
"flutter::src::foundation::change_notifier.dart::ChangeNotifier" <|-- "eve::viewModel::option_view_model.dart::OptionViewModel"

class "eve::views::pages::option_page.dart::OptionPage" {
  +State<OptionPage> createState()
}

"flutter::src::widgets::framework.dart::StatefulWidget" <|-- "eve::views::pages::option_page.dart::OptionPage"

class "eve::views::pages::option_page.dart::_OptionPageState" {
  -String _nickname
  -String _email
  -int _level
  -int _exp
  -int _maxExp
  +void initState()
  -dynamic _loadUserInfo()
  +String getProfileImage()
  +Widget build()
  -Widget _buildProfileSection()
  -Widget _buildExpBar()
  -Widget _buildOptionCard()
}

"flutter::src::widgets::framework.dart::State" <|-- "eve::views::pages::option_page.dart::_OptionPageState"

class "eve::views::pages::quiz_option_page.dart::QuizOptionPage" {
  +State<QuizOptionPage> createState()
}

"flutter::src::widgets::framework.dart::StatefulWidget" <|-- "eve::views::pages::quiz_option_page.dart::QuizOptionPage"

class "eve::views::pages::quiz_option_page.dart::_QuizOptionPageState" {
  +void initState()
  +Widget build()
  -Widget _buildOptionCard()
}

"flutter::src::widgets::framework.dart::State" <|-- "eve::views::pages::quiz_option_page.dart::_QuizOptionPageState"

class "eve::views::widgets::option_widget.dart::OptionTile" {
  +String title
  +void Function() onTap
  +Widget build()
}

"eve::views::widgets::option_widget.dart::OptionTile" o-- "dart::ui::void Function()"
"flutter::src::widgets::framework.dart::StatelessWidget" <|-- "eve::views::widgets::option_widget.dart::OptionTile"

class "eve::views::widgets::option_widget.dart::SoundDialog" {
  {static} +void show()
  {static} -Widget _dialogHeader()
}

class "eve::views::widgets::option_widget.dart::LanguageDialog" {
  {static} +void show()
  {static} -Widget _dialogHeader()
  {static} -Widget _languageOption()
}

class "eve::views::widgets::option_widget.dart::BackgroundDialog" {
  {static} +void show()
  {static} -Widget _dialogHeader()
  {static} -Widget _themeOption()
}

class "eve::views::widgets::option_widget.dart::NicknameDialog" {
  {static} +void show()
  {static} -Widget _dialogHeader()
}


@enduml