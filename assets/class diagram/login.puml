@startuml
' 💄 시각 정돈용 설정
skinparam classAttributeIconSize 0
skinparam ClassFontSize 11
skinparam ClassAttributeFontSize 10
skinparam ClassStereotypeFontSize 9
skinparam BackgroundColor #FAFAFA
skinparam ArrowColor DarkSlateGray
skinparam ClassBackgroundColor White
skinparam Shadowing false
skinparam dpi 150

' 💡 패키지 단위로 그룹핑
set namespaceSeparator ::


class "eve::firebase_options.dart::DefaultFirebaseOptions" {
  {static} +FirebaseOptions android
  {static} +FirebaseOptions currentPlatform
}

"eve::firebase_options.dart::DefaultFirebaseOptions" o-- "firebase_core_platform_interface::firebase_core_platform_interface.dart::FirebaseOptions"

class "eve::main.dart::MyApp" {
  -dynamic _getStartPage()
  +Widget build()
}

"flutter::src::widgets::framework.dart::StatelessWidget" <|-- "eve::main.dart::MyApp"

class "eve::main.dart::MainPage" {
  +_MainPage createState()
}

"flutter::src::widgets::framework.dart::StatefulWidget" <|-- "eve::main.dart::MainPage"

class "eve::main.dart::_MainPage" {
  +String nickname
  +String accuracy
  +String learningTime
  +int totalSolved
  +int correctSolved
  -int _level
  -int _exp
  -int _maxExp
  -bool _notificationsEnabled
  +void initState()
  +String getGradeMappingText()
  -dynamic _loadUserInfo()
  -dynamic _loadStats()
  -dynamic _loadLearningTime()
  +String getProfileImage()
  +Widget build()
}

"flutter::src::widgets::framework.dart::State" <|-- "eve::main.dart::_MainPage"


class "eve::repository::auth_repository.dart::AuthRepository" {
  -FirebaseFirestore _firestore
  +dynamic getUserDoc()
  +dynamic createUser()
  +dynamic updateLastLogin()
  +dynamic updateNickname()
  +dynamic getNickname()
}

"eve::repository::auth_repository.dart::AuthRepository" o-- "cloud_firestore::cloud_firestore.dart::FirebaseFirestore"


class "eve::services::auth_service.dart::AuthService" {
  -FirebaseAuth _firebaseAuth
  -FirebaseFirestore _firestore
  -GoogleSignIn _googleSignIn
  +dynamic signInWithGoogle()
  +dynamic updateNickname()
  +dynamic getNickname()
  +dynamic signOutAndExit()
}

"eve::services::auth_service.dart::AuthService" o-- "firebase_auth::firebase_auth.dart::FirebaseAuth"
"eve::services::auth_service.dart::AuthService" o-- "cloud_firestore::cloud_firestore.dart::FirebaseFirestore"
"eve::services::auth_service.dart::AuthService" o-- "google_sign_in::google_sign_in.dart::GoogleSignIn"

class "eve::viewModel::login_view_model.dart::LoginViewModel" {
  -AuthService _authService
  +bool isLoading
  +String errorMessage
  +dynamic signInWithGoogle()
}

"eve::viewModel::login_view_model.dart::LoginViewModel" o-- "eve::services::auth_service.dart::AuthService"
"flutter::src::foundation::change_notifier.dart::ChangeNotifier" <|-- "eve::viewModel::login_view_model.dart::LoginViewModel"

class "eve::viewModel::option_view_model.dart::OptionViewModel" {
  -AuthService _authService
  -QuizRepository _quizRepository
  +QuizRepository quizRepository
  +dynamic resetUserStats()
  +dynamic signOutAndExit()
  +dynamic updateNickname()
  +dynamic checkNicknameAvailable()
}

"eve::viewModel::option_view_model.dart::OptionViewModel" o-- "eve::Services::auth_service.dart::AuthService"
"eve::viewModel::option_view_model.dart::OptionViewModel" o-- "eve::repository::quiz_repository.dart::QuizRepository"
"flutter::src::foundation::change_notifier.dart::ChangeNotifier" <|-- "eve::viewModel::option_view_model.dart::OptionViewModel"

class "eve::views::pages::login_page.dart::LoginPage" {
  +Widget build()
}

"flutter::src::widgets::framework.dart::StatelessWidget" <|-- "eve::views::pages::login_page.dart::LoginPage"

class "eve::views::pages::option_page.dart::OptionPage" {
  +State<OptionPage> createState()
}

"flutter::src::widgets::framework.dart::StatefulWidget" <|-- "eve::views::pages::option_page.dart::OptionPage"

class "eve::views::pages::option_page.dart::_OptionPageState" {
  -String _nickname
  -String _email
  -int _level
  -int _exp
  -int _maxExp
  +void initState()
  -dynamic _loadUserInfo()
  +String getProfileImage()
  +Widget build()
  -Widget _buildProfileSection()
  -Widget _buildExpBar()
  -Widget _buildOptionCard()
}

"flutter::src::widgets::framework.dart::State" <|-- "eve::views::pages::option_page.dart::_OptionPageState"

class "eve::views::pages::set_name_page.dart::SetUserPage" {
  +_SetUserPage createState()
}

"flutter::src::widgets::framework.dart::StatefulWidget" <|-- "eve::views::pages::set_name_page.dart::SetUserPage"

class "eve::views::pages::set_name_page.dart::_SetUserPage" {
  -TextEditingController _nicknameController
  -bool _isSaving
  -bool? _isDuplicate
  -String _checkMessage
  -bool _validateNickname()
  -dynamic _checkNicknameDuplicate()
  -dynamic _saveNickname()
  +Widget build()
}

"eve::views::pages::set_name_page.dart::_SetUserPage" o-- "flutter::src::widgets::editable_text.dart::TextEditingController"
"flutter::src::widgets::framework.dart::State" <|-- "eve::views::pages::set_name_page.dart::_SetUserPage"

class "eve::views::widgets::option_widget.dart::OptionTile" {
  +String title
  +void Function() onTap
  +Widget build()
}

"eve::views::widgets::option_widget.dart::OptionTile" o-- "dart::ui::void Function()"
"flutter::src::widgets::framework.dart::StatelessWidget" <|-- "eve::views::widgets::option_widget.dart::OptionTile"

@enduml